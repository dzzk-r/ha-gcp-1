name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: write
  pull-requests: write

jobs:
  setup:
    name: Setup & Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Cache Terraform Dependencies
        uses: actions/cache@v4
        with:
          path: .terraform/
          key: terraform-${{ runner.os }}-${{ hashFiles('**/*.tf') }}
          restore-keys: terraform-${{ runner.os }}-

  terraform-tasks:
    name: tfTasks
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task: [validate, security-scan, cost-estimation]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: terraform init -reconfigure

      - name: Terraform Validate
        if: matrix.task == 'validate'
        run: terraform validate -no-color

      - name: Install Checkov
        if: matrix.task == 'security-scan'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip install --upgrade pip setuptools checkov

      - name: Run Checkov Security Scan
        if: matrix.task == 'security-scan'
        run: |
          checkov -d . --quiet --output json > checkov-report.json || true
          cat checkov-report.json | jq . > checkov-results.json

      - name: Install Infracost
        if: matrix.task == 'cost-estimation'
        run: |
          curl -fsSL https://raw.githubusercontent.com/infracost/infracost/master/scripts/install.sh | sh
          infracost configure set api_key ${{ secrets.INFRACOST_API_KEY }}

      - name: Generate Terraform Plan for Cost Estimation
        if: matrix.task == 'cost-estimation'
        run: |
          echo "Generating Terraform Plan for Cost Estimation..."
          terraform plan -input=false -var="project_id=mock-project" -var="region=mock-region" -out=tfplan.binary || echo "{}" > tfplan.binary
          terraform show -json tfplan.binary > tfplan.json || echo "{}" > tfplan.json

      - name: Debug - Check Terraform Plan JSON
        if: matrix.task == 'cost-estimation'
        run: |
          ls -lah tfplan.json
          cat tfplan.json | jq . || echo "{}"

      - name: Run Infracost Estimate
        if: matrix.task == 'cost-estimation'
        run: |
          echo "Running Infracost Breakdown..."
          infracost breakdown --terraform-plan-file=tfplan.json --format json > infracost.json || echo "{}" > infracost.json
          ls -lah infracost.json  # Debugging step to check if file exists
          cat infracost.json | jq . > infracost-results.json || echo "{}" > infracost-results.json

      - name: Save Task Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.task }}-report
          path: |
            checkov-results.json
            infracost-results.json
          if-no-files-found: ignore

  terraform-plan:
    name: Terraform Plan
    needs: terraform-tasks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: terraform init -reconfigure

      - name: Generate Terraform Plan
        run: |
          echo "Generating Terraform plan..."
          terraform plan -input=false -var="project_id=mock-project" -var="region=mock-region" -out=tfplan.binary || echo "No changes detected"
          
          echo "Converting plan to JSON..."
          terraform show -json tfplan.binary > tfplan.json || echo "{}" > tfplan.json

      - name: Save Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: tfplan.json

      - name: Post Terraform Plan to PR
        if: github.event_name == 'pull_request'
        uses: mshick/add-pr-comment@v2
        with:
          message: |
            üöÄ **Terraform Plan Results**:
            ```
            $(terraform show tfplan.binary)
            ```
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Post Infracost Report to PR
        if: github.event_name == 'pull_request'
        run: |
          if [ ! -f infracost.json ]; then
            echo "‚ö†Ô∏è No infracost.json found, skipping comment."
            exit 0
          fi
          
          echo "### :moneybag: Estimated Cost Changes" > infracost-comment.txt
          echo '```json' >> infracost-comment.txt
          cat infracost.json >> infracost-comment.txt
          echo '```' >> infracost-comment.txt
          
          echo "Posting Infracost Report to PR..."
          gh pr comment ${{ github.event.pull_request.number }} -F infracost-comment.txt || echo "‚ö†Ô∏è Failed to post PR comment."

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  terraform-apply:
    name: Terraform Apply (Main Branch Only)
    needs: terraform-plan
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: terraform init -reconfigure

      - name: Terraform Apply
        run: terraform apply -auto-approve
